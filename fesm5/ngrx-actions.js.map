{"version":3,"file":"ngrx-actions.js.map","sources":["ng://ngrx-actions/select.ts","ng://ngrx-actions/internals.ts","ng://ngrx-actions/factory.ts","ng://ngrx-actions/module.ts","ng://ngrx-actions/action.ts","ng://ngrx-actions/of-action.ts","ng://ngrx-actions/store.ts","ng://ngrx-actions/effect.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store, Selector } from '@ngrx/store';\n\n@Injectable()\nexport class NgrxSelect {\n  static store: Store<any> | undefined = undefined;\n  connect(store: Store<any>) {\n    NgrxSelect.store = store;\n  }\n}\n\nexport function Select<TState = any, TValue = any>(\n  selector: Selector<TState, TValue>\n): (target: any, name: string) => void;\n\nexport function Select<TState = any, TValue = any>(\n  selectorOrFeature?: string,\n  ...paths: string[]\n): (target: any, name: string) => void;\n\n/**\n * Slice state from the store.\n */\nexport function Select<TState = any, TValue = any>(\n  selectorOrFeature?: string | Selector<TState, TValue>,\n  ...paths: string[]\n) {\n  return function(target: any, name: string): void {\n    const selectorFnName = '__' + name + '__selector';\n    let fn: Selector<TState, TValue>;\n    // Nothing here? Use propery name as selector\n    if (!selectorOrFeature) {\n      selectorOrFeature = name;\n    }\n    // Handle string vs Selector<TState, TValue>\n    if (typeof selectorOrFeature === 'string') {\n      const propsArray = paths.length ? [selectorOrFeature, ...paths] : selectorOrFeature.split('.');\n      fn = fastPropGetter(propsArray);\n    } else {\n      fn = selectorOrFeature;\n    }\n\n    const createSelect = () => {\n      const store = NgrxSelect.store;\n      if (!store) {\n        throw new Error('NgrxSelect not connected to store!');\n      }\n      return store.select(fn);\n    };\n\n    if (target[selectorFnName]) {\n      throw new Error('You cannot use @Select decorator and a ' + selectorFnName + ' property.');\n    }\n\n    // Redefine property\n    if (delete target[name]) {\n      Object.defineProperty(target, selectorFnName, {\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n\n      Object.defineProperty(target, name, {\n        get: function() {\n          return this[selectorFnName] || (this[selectorFnName] = createSelect.apply(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize (old ngrx-actions implementation)\n * - MemoizedSelector (ngrx)\n */\nexport function fastPropGetter(paths: string[]): (x: any) => any {\n  const segments = paths;\n  let seg = 'store.' + segments[0],\n    i = 0;\n  const l = segments.length;\n  let expr = seg;\n  while (++i < l) {\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n  }\n  const fn = new Function('store', 'return ' + expr + ';');\n  return <(x: any) => any>fn;\n}\n","import { ActionType } from './symbols';\n\nexport const NGRX_ACTIONS_META = '__ngrx__actions__';\n\nexport interface StoreMetadata {\n  initialState?: any;\n  actions: ActionsMeta;\n  effects: ActionsMeta;\n}\n\nexport interface ActionMeta {\n  action: ActionType;\n  fn: string;\n  type: string;\n}\n\nexport type ActionsMeta = {\n  [type: string]: ActionMeta;\n};\n\nexport function ensureStoreMetadata(target: any): StoreMetadata {\n  // see https://github.com/angular/angular/blob/master/packages/core/src/util/decorators.ts#L60\n  if (!target.hasOwnProperty(NGRX_ACTIONS_META)) {\n    const defaultMetadata: StoreMetadata = { actions: {}, effects: {} };\n    Object.defineProperty(target, NGRX_ACTIONS_META, { value: defaultMetadata });\n  }\n  return target[NGRX_ACTIONS_META];\n}\n","import { Action } from '@ngrx/store';\nimport { materialize } from 'rxjs/operators';\n\nimport { NGRX_ACTIONS_META, StoreMetadata } from './internals';\nimport { NgrxSelect } from './select';\n\nexport function createReducer<TState = any>(\n  store:\n    | {\n        new (...args: any[]): any;\n      }\n    | any\n): (state: TState, action: Action | any) => TState {\n  const isInstance = !store.prototype;\n  const klass = isInstance ? store.constructor : store;\n\n  if (!klass.hasOwnProperty(NGRX_ACTIONS_META)) {\n    throw new Error('A reducer can be created from a @Store decorated class only.');\n  }\n\n  const instance = isInstance ? store : new store();\n  const { initialState, actions, effects } = klass[NGRX_ACTIONS_META] as StoreMetadata;\n\n  return function(state: any = initialState, action: Action) {\n    const actionMeta = actions[action.type];\n    if (actionMeta) {\n      const result = instance[actionMeta.fn](state, action);\n      if (result === undefined) {\n        if (Array.isArray(state)) {\n          return [...state];\n        } else {\n          return { ...state };\n        }\n      }\n      state = result;\n    }\n\n    const effectMeta = effects[action.type];\n    if (effectMeta) {\n      const retVal = instance[effectMeta.fn](state, action);\n      if (retVal) {\n        if (retVal.subscribe) {\n          retVal.pipe(materialize()).subscribe(res => {\n            if (res.value && NgrxSelect.store) {\n              NgrxSelect.store.dispatch(res.value);\n            }\n          });\n        } else if (NgrxSelect.store) {\n          if (Array.isArray(retVal)) {\n            retVal.forEach(r => NgrxSelect.store && NgrxSelect.store.dispatch(r));\n          } else {\n            NgrxSelect.store.dispatch(retVal);\n          }\n        }\n      }\n    }\n\n    return state;\n  };\n}\n","import { NgModule, InjectionToken, ModuleWithProviders, Injector, Inject, Optional } from '@angular/core';\nimport { Store, StoreModule, ReducerManager, combineReducers } from '@ngrx/store';\n\nimport { NgrxSelect } from './select';\nimport { createReducer } from './factory';\n\nexport const STORE_TOKEN = new InjectionToken<any>('STORE_TOKEN');\nexport const FEATURE_STORE_TOKEN = new InjectionToken<any>('FEATURE_STORE_TOKEN');\n\n@NgModule({\n  imports: [StoreModule],\n  providers: [NgrxSelect]\n})\nexport class NgrxActionsModule {\n  static forRoot(reducers: any): ModuleWithProviders {\n    return {\n      ngModule: NgrxActionsModule,\n      providers: [\n        {\n          provide: STORE_TOKEN,\n          useValue: reducers\n        }\n      ]\n    };\n  }\n\n  static forFeature(key: any, reducers?: any): ModuleWithProviders {\n    return {\n      ngModule: NgrxActionsModule,\n      providers: [\n        {\n          provide: FEATURE_STORE_TOKEN,\n          useValue: { key, reducers }\n        }\n      ]\n    };\n  }\n\n  constructor(\n    @Optional()\n    @Inject(STORE_TOKEN)\n    reducers: any,\n    @Optional()\n    @Inject(FEATURE_STORE_TOKEN)\n    featureReducers: any,\n    reducerFactory: ReducerManager,\n    store: Store<any>,\n    parentInjector: Injector,\n    select: NgrxSelect\n  ) {\n    select.connect(store);\n\n    if (reducers) {\n      for (const key in reducers) {\n        const klass = reducers[key];\n        const inst = parentInjector.get(klass, new klass());\n        reducerFactory.addReducer(key, createReducer(inst));\n      }\n    }\n\n    if (featureReducers) {\n      if (typeof featureReducers.key !== 'string') {\n        featureReducers.reducers = featureReducers.key;\n        featureReducers.key = undefined;\n      }\n\n      const mapped = {};\n      for (const key in featureReducers.reducers) {\n        const klass = featureReducers.reducers[key];\n        const inst = parentInjector.get(klass, new klass());\n        mapped[key] = createReducer(inst);\n      }\n\n      if (featureReducers.key) {\n        reducerFactory.addFeature({\n          reducers: mapped,\n          reducerFactory: <any>combineReducers,\n          key: featureReducers.key\n        });\n      }\n    }\n  }\n}\n","import { ensureStoreMetadata } from './internals';\nimport { ActionType } from './symbols';\n\nexport function Action(...actionsKlasses: ActionType[]) {\n  return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\n    const meta = ensureStoreMetadata(target.constructor);\n\n    for (const klass of actionsKlasses) {\n      const inst = new klass();\n      const type = inst.type;\n\n      if (meta.actions[type]) {\n        throw new Error(\n          `@Action for '${type}' is defined multiple times in functions '${meta.actions[type].fn}' and '${name}'`\n        );\n      }\n\n      meta.actions[type] = {\n        action: klass,\n        fn: name,\n        type\n      };\n    }\n  };\n}\n","import { Action } from '@ngrx/store';\nimport { filter } from 'rxjs/operators';\nimport { OperatorFunction } from 'rxjs';\n\nimport { ActionType } from './symbols';\n\nexport function ofAction<T extends Action>(allowedType: ActionType<T>): OperatorFunction<Action, T>;\nexport function ofAction<T extends Action>(...allowedTypes: ActionType[]): OperatorFunction<Action, T>;\nexport function ofAction(...allowedTypes: ActionType[]): OperatorFunction<Action, Action> {\n  const allowedMap = {};\n  allowedTypes.forEach(klass => (allowedMap[new klass().type] = true));\n  return filter((action: Action) => {\n    return allowedMap[action.type];\n  });\n}\n","import { ensureStoreMetadata } from './internals';\n\nexport function Store<TState>(initialState?: TState): (target: Function) => void;\nexport function Store(initialState?: any): (target: Function) => void;\nexport function Store(initialState: any = {}) {\n  return function(target: Function) {\n    const meta = ensureStoreMetadata(target);\n    meta.initialState = initialState;\n  };\n}\n","import { ActionType } from './symbols';\nimport { ensureStoreMetadata } from './internals';\n\nexport function Effect(...effectKlasses: ActionType[]) {\n  return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\n    const meta = ensureStoreMetadata(target.constructor);\n\n    for (const klass of effectKlasses) {\n      const inst = new klass();\n      const type = inst.type;\n\n      if (meta.effects[type]) {\n        throw new Error(\n          `@Effect for '${type}' is defined multiple times in functions '${meta.effects[type].fn}' and '${name}'`\n        );\n      }\n\n      meta.effects[type] = {\n        action: klass,\n        fn: name,\n        type\n      };\n    }\n  };\n}\n"],"names":["tslib_1.__values","Store"],"mappings":";;;;;;;;;;IAGA;KAMC;;;;;IAHC,4BAAO;;;;IAAP,UAAQ,KAAiB;QACvB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;KAC1B;IAHM,gBAAK,GAA2B,SAAS,CAAC;;gBAFlD,UAAU;;IAMX,iBAAC;CAND,IAMC;;;;;;;;AAcD,SAAgB,MAAM,CACpB,iBAAqD;IACrD,eAAkB;SAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;QAAlB,8BAAkB;;IAElB,OAAO,UAAS,MAAW,EAAE,IAAY;;YACjC,cAAc,GAAG,IAAI,GAAG,IAAI,GAAG,YAAY;;YAC7C,EAA4B;;QAEhC,IAAI,CAAC,iBAAiB,EAAE;YACtB,iBAAiB,GAAG,IAAI,CAAC;SAC1B;;QAED,IAAI,OAAO,iBAAiB,KAAK,QAAQ,EAAE;;gBACnC,UAAU,GAAG,KAAK,CAAC,MAAM,aAAI,iBAAiB,GAAK,KAAK,IAAI,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC;YAC9F,EAAE,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC;SACjC;aAAM;YACL,EAAE,GAAG,iBAAiB,CAAC;SACxB;;YAEK,YAAY,GAAG;;gBACb,KAAK,GAAG,UAAU,CAAC,KAAK;YAC9B,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACvD;YACD,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACzB;QAED,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,yCAAyC,GAAG,cAAc,GAAG,YAAY,CAAC,CAAC;SAC5F;;QAGD,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE;YACvB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,EAAE;gBAC5C,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;YAEH,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE;gBAClC,GAAG,EAAE;oBACH,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;iBAClF;gBACD,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;SACJ;KACF,CAAC;CACH;;;;;;;;;AAQD,SAAgB,cAAc,CAAC,KAAe;;QACtC,QAAQ,GAAG,KAAK;;QAClB,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;;QAC9B,CAAC,GAAG,CAAC;;QACD,CAAC,GAAG,QAAQ,CAAC,MAAM;;QACrB,IAAI,GAAG,GAAG;IACd,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;QACd,IAAI,GAAG,IAAI,GAAG,MAAM,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;;QACK,EAAE,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC;IACxD,0BAAwB,EAAE,GAAC;CAC5B;;;;;;;ACxFD,IAAa,iBAAiB,GAAG,mBAAmB;;;;;AAkBpD,SAAgB,mBAAmB,CAAC,MAAW;;IAE7C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAAE;;YACvC,eAAe,GAAkB,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;QACnE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;KAC9E;IACD,OAAO,MAAM,CAAC,iBAAiB,CAAC,CAAC;CAClC;;;;;;;;;;;ACrBD,SAAgB,aAAa,CAC3B,KAIO;;QAED,UAAU,GAAG,CAAC,KAAK,CAAC,SAAS;;QAC7B,KAAK,GAAG,UAAU,GAAG,KAAK,CAAC,WAAW,GAAG,KAAK;IAEpD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAAE;QAC5C,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;KACjF;;QAEK,QAAQ,GAAG,UAAU,GAAG,KAAK,GAAG,IAAI,KAAK,EAAE;IAC3C,IAAA,kDAA8E,EAA5E,8BAAY,EAAE,oBAAO,EAAE,oBAAqD;IAEpF,OAAO,UAAS,KAAyB,EAAE,MAAc;QAAzC,sBAAA,EAAA,oBAAyB;;YACjC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACvC,IAAI,UAAU,EAAE;;gBACR,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC;YACrD,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,gBAAW,KAAK,EAAE;iBACnB;qBAAM;oBACL,oBAAY,KAAK,EAAG;iBACrB;aACF;YACD,KAAK,GAAG,MAAM,CAAC;SAChB;;YAEK,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACvC,IAAI,UAAU,EAAE;;gBACR,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC;YACrD,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,SAAS,EAAE;oBACpB,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,GAAG;wBACtC,IAAI,GAAG,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,EAAE;4BACjC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBACtC;qBACF,CAAC,CAAC;iBACJ;qBAAM,IAAI,UAAU,CAAC,KAAK,EAAE;oBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBACzB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;qBACvE;yBAAM;wBACL,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBACnC;iBACF;aACF;SACF;QAED,OAAO,KAAK,CAAC;KACd,CAAC;CACH;;;;;;AC3DD;AAMA,IAAa,WAAW,GAAG,IAAI,cAAc,CAAM,aAAa,CAAC;;AACjE,IAAa,mBAAmB,GAAG,IAAI,cAAc,CAAM,qBAAqB,CAAC;AAEjF;IA6BE,2BAGE,QAAa,EAGb,eAAoB,EACpB,cAA8B,EAC9B,KAAiB,EACjB,cAAwB,EACxB,MAAkB;QAElB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEtB,IAAI,QAAQ,EAAE;YACZ,KAAK,IAAM,GAAG,IAAI,QAAQ,EAAE;;oBACpB,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;;oBACrB,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK,EAAE,CAAC;gBACnD,cAAc,CAAC,UAAU,CAAC,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;aACrD;SACF;QAED,IAAI,eAAe,EAAE;YACnB,IAAI,OAAO,eAAe,CAAC,GAAG,KAAK,QAAQ,EAAE;gBAC3C,eAAe,CAAC,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC;gBAC/C,eAAe,CAAC,GAAG,GAAG,SAAS,CAAC;aACjC;;gBAEK,MAAM,GAAG,EAAE;YACjB,KAAK,IAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,EAAE;;oBACpC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC;;oBACrC,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK,EAAE,CAAC;gBACnD,MAAM,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;aACnC;YAED,IAAI,eAAe,CAAC,GAAG,EAAE;gBACvB,cAAc,CAAC,UAAU,CAAC;oBACxB,QAAQ,EAAE,MAAM;oBAChB,cAAc,qBAAO,eAAe,EAAA;oBACpC,GAAG,EAAE,eAAe,CAAC,GAAG;iBACzB,CAAC,CAAC;aACJ;SACF;KACF;;;;;IAnEM,yBAAO;;;;IAAd,UAAe,QAAa;QAC1B,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,WAAW;oBACpB,QAAQ,EAAE,QAAQ;iBACnB;aACF;SACF,CAAC;KACH;;;;;;IAEM,4BAAU;;;;;IAAjB,UAAkB,GAAQ,EAAE,QAAc;QACxC,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,QAAQ,EAAE,EAAE,GAAG,KAAA,EAAE,QAAQ,UAAA,EAAE;iBAC5B;aACF;SACF,CAAC;KACH;;gBA3BF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,WAAW,CAAC;oBACtB,SAAS,EAAE,CAAC,UAAU,CAAC;iBACxB;;;;gDA2BI,QAAQ,YACR,MAAM,SAAC,WAAW;gDAElB,QAAQ,YACR,MAAM,SAAC,mBAAmB;gBA1CF,cAAc;gBAAlC,KAAK;gBAD0C,QAAQ;gBAGvD,UAAU;;IA+EnB,wBAAC;CAzED;;;;;;;;;;ACNA,SAAgB,MAAM;IAAC,wBAA+B;SAA/B,UAA+B,EAA/B,qBAA+B,EAA/B,IAA+B;QAA/B,mCAA+B;;IACpD,OAAO,UAAS,MAAW,EAAE,IAAY,EAAE,UAAwC;;;YAC3E,IAAI,GAAG,mBAAmB,CAAC,MAAM,CAAC,WAAW,CAAC;;YAEpD,KAAoB,IAAA,mBAAAA,SAAA,cAAc,CAAA,8CAAA,0EAAE;gBAA/B,IAAM,KAAK,2BAAA;;oBACR,IAAI,GAAG,IAAI,KAAK,EAAE;;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI;gBAEtB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACtB,MAAM,IAAI,KAAK,CACb,kBAAgB,IAAI,kDAA6C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,eAAU,IAAI,MAAG,CACxG,CAAC;iBACH;gBAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG;oBACnB,MAAM,EAAE,KAAK;oBACb,EAAE,EAAE,IAAI;oBACR,IAAI,MAAA;iBACL,CAAC;aACH;;;;;;;;;KACF,CAAC;CACH;;;;;;ACvBD;;;;AAOA,SAAgB,QAAQ;IAAC,sBAA6B;SAA7B,UAA6B,EAA7B,qBAA6B,EAA7B,IAA6B;QAA7B,iCAA6B;;;QAC9C,UAAU,GAAG,EAAE;IACrB,YAAY,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,QAAC,UAAU,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,IAAC,CAAC,CAAC;IACrE,OAAO,MAAM,CAAC,UAAC,MAAc;QAC3B,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAChC,CAAC,CAAC;CACJ;;;;;;ACdD;;;;AAIA,SAAgBC,OAAK,CAAC,YAAsB;IAAtB,6BAAA,EAAA,iBAAsB;IAC1C,OAAO,UAAS,MAAgB;;YACxB,IAAI,GAAG,mBAAmB,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC,CAAC;CACH;;;;;;;;;;ACND,SAAgB,MAAM;IAAC,uBAA8B;SAA9B,UAA8B,EAA9B,qBAA8B,EAA9B,IAA8B;QAA9B,kCAA8B;;IACnD,OAAO,UAAS,MAAW,EAAE,IAAY,EAAE,UAAwC;;;YAC3E,IAAI,GAAG,mBAAmB,CAAC,MAAM,CAAC,WAAW,CAAC;;YAEpD,KAAoB,IAAA,kBAAAD,SAAA,aAAa,CAAA,4CAAA,uEAAE;gBAA9B,IAAM,KAAK,0BAAA;;oBACR,IAAI,GAAG,IAAI,KAAK,EAAE;;oBAClB,IAAI,GAAG,IAAI,CAAC,IAAI;gBAEtB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACtB,MAAM,IAAI,KAAK,CACb,kBAAgB,IAAI,kDAA6C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,eAAU,IAAI,MAAG,CACxG,CAAC;iBACH;gBAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG;oBACnB,MAAM,EAAE,KAAK;oBACb,EAAE,EAAE,IAAI;oBACR,IAAI,MAAA;iBACL,CAAC;aACH;;;;;;;;;KACF,CAAC;CACH;;;;;;;;;;;;;;;;;;;"}
